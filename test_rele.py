#!/usr/bin/env python3
"""
Script de prueba simple para el rel√©
Verifica que las conexiones y GPIO funcionen correctamente
"""

import time
import sys

def test_imports():
    """Prueba que las dependencias est√©n disponibles"""
    print("üîç Probando importaciones...")
    
    try:
        import RPi.GPIO as GPIO
        print("‚úÖ RPi.GPIO importado correctamente")
        return True
    except ImportError as e:
        print(f"‚ùå Error al importar RPi.GPIO: {e}")
        print("üí° Instala con: pip install RPi.GPIO")
        return False

def test_gpio():
    """Prueba el acceso a GPIO"""
    print("\n‚ö° Probando acceso a GPIO...")
    
    try:
        import RPi.GPIO as GPIO
        
        # Configurar modo GPIO
        GPIO.setmode(GPIO.BCM)
        GPIO.setwarnings(False)
        
        # Probar pin de configuraci√≥n
        test_pin = 8
        GPIO.setup(test_pin, GPIO.OUT)
        
        print(f"‚úÖ GPIO configurado - Pin {test_pin}")
        
        # Probar salida
        GPIO.output(test_pin, GPIO.HIGH)
        time.sleep(0.5)
        GPIO.output(test_pin, GPIO.LOW)
        
        print("‚úÖ Salida GPIO funcionando")
        
        # Limpiar configuraci√≥n
        GPIO.cleanup()
        return True
        
    except Exception as e:
        print(f"‚ùå Error al probar GPIO: {e}")
        return False

def test_rele_basico():
    """Prueba b√°sica de ambos rel√©s"""
    print("\nüîå Probando rel√©s b√°sicos...")
    
    try:
        import RPi.GPIO as GPIO
        
        # Configuraci√≥n
        RELE1_PIN = 2
        RELE2_PIN = 3
        RELE_ACTIVO_BAJO = True
        
        GPIO.setmode(GPIO.BCM)
        GPIO.setwarnings(False)
        GPIO.setup(RELE1_PIN, GPIO.OUT)
        GPIO.setup(RELE2_PIN, GPIO.OUT)
        
        # Estado inicial: rel√©s desactivados
        estado_inicial = GPIO.LOW if RELE_ACTIVO_BAJO else GPIO.HIGH
        GPIO.output(RELE1_PIN, estado_inicial)
        GPIO.output(RELE2_PIN, estado_inicial)
        
        print("‚úÖ Rel√©s configurados correctamente")
        print("üîå Rel√© 1 DESACTIVADO (estado inicial)")
        print("üîå Rel√© 2 DESACTIVADO (estado inicial)")
        
        # Activar rel√© 1
        print("üîå Activando rel√© 1...")
        estado_activado = GPIO.LOW if RELE_ACTIVO_BAJO else GPIO.HIGH
        GPIO.output(RELE1_PIN, estado_activado)
        time.sleep(1)
        
        # Activar rel√© 2
        print("üîå Activando rel√© 2...")
        GPIO.output(RELE2_PIN, estado_activado)
        time.sleep(1)
        
        # Desactivar ambos
        print("üîå Desactivando ambos rel√©s...")
        estado_desactivado = GPIO.HIGH if RELE_ACTIVO_BAJO else GPIO.LOW
        GPIO.output(RELE1_PIN, estado_desactivado)
        GPIO.output(RELE2_PIN, estado_desactivado)
        
        print("‚úÖ Prueba b√°sica de ambos rel√©s completada")
        
        # Limpiar
        GPIO.cleanup()
        return True
        
    except Exception as e:
        print(f"‚ùå Error al probar rel√©s: {e}")
        return False

def main():
    """Funci√≥n principal de pruebas"""
    print("üß™ PRUEBAS DEL REL√â - Raspberry Pi")
    print("=" * 40)
    
    # Verificar versi√≥n de Python
    print(f"üêç Python {sys.version}")
    print(f"üìç Plataforma: {sys.platform}")
    
    # Probar importaciones
    imports_ok = test_imports()
    
    if not imports_ok:
        print("\n‚ùå PROBLEMAS CON LAS DEPENDENCIAS")
        print("üí° Soluciones:")
        print("   1. Activa el entorno virtual: source dht11_env/bin/activate")
        print("   2. Ejecuta: pip install RPi.GPIO")
        print("   3. O usa: pip install --break-system-packages RPi.GPIO")
        return
    
    # Probar GPIO
    gpio_ok = test_gpio()
    
    # Probar rel√©
    rele_ok = test_rele_basico()
    
    # Resumen
    print("\n" + "=" * 40)
    print("üìä RESUMEN DE PRUEBAS")
    print("=" * 40)
    print(f"üìö Dependencias: {'‚úÖ OK' if imports_ok else '‚ùå FALLO'}")
    print(f"‚ö° GPIO: {'‚úÖ OK' if gpio_ok else '‚ùå FALLO'}")
    print(f"üîå Rel√©s: {'‚úÖ OK' if rele_ok else '‚ùå FALLO'}")
    
    if imports_ok and gpio_ok and rele_ok:
        print("\nüéâ ¬°TODAS LAS PRUEBAS PASARON!")
        print("üöÄ Tus rel√©s est√°n listos para usar")
        print("\nüí° Pr√≥ximos pasos:")
        print("   python rele_demo.py --manual")
        print("   python rele_demo.py --auto 3")
        print("   python rele_demo.py --sequence")
    else:
        print("\n‚ö†Ô∏è  ALGUNAS PRUEBAS FALLARON")
        print("üí° Revisa las conexiones y configuraci√≥n")
        
        if not imports_ok:
            print("   - Instala las dependencias")
        if not gpio_ok:
            print("   - Verifica permisos GPIO")
        if not rele_ok:
            print("   - Verifica conexiones del rel√©")

if __name__ == "__main__":
    main() 